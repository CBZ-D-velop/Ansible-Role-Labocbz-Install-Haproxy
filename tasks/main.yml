---
- name: "Install packages"
  notify: "Enable and start HAProxy"
  ansible.builtin.package:
    update_cache: true
    name:
      - "haproxy"

- name: "Configure HAProxy"
  notify: "Restart HAProxy"
  block:
    - name: "Prepare folders"
      loop:
        - "{{ install_haproxy__path }}"
        - "{{ install_haproxy__confs_path }}"
        - "{{ install_haproxy__error_path }}"
        - "{{ install_haproxy__ssl_path }}"
      loop_control:
        loop_var: file
      register: output
      changed_when: output.size <= 0
      ansible.builtin.file:
        path: "{{ file }}"
        state: directory
        recurse: yes
        group: "{{ install_install_haproxy__group }}"
        owner: "{{ install_install_haproxy__user }}"
        mode: "0700"

    - name: "Remove old confs"
      when: install_haproxy__remove_old_confs | default(false)
      loop:
        - "{{ install_haproxy__confs_path }}"
        - "{{ install_haproxy__error_path }}"
        - "{{ install_haproxy__ssl_path }}"
      loop_control:
        loop_var: path
      ansible.builtin.include_tasks:
        file: "delete_pevious_confs.yml"

    - name: "Template configuration files"
      loop:
        - { src: "templates/haproxy.j2", dest: "/etc/default/haproxy" }
        - { src: "templates/haproxy.cfg.j2", dest: "/etc/haproxy/haproxy.cfg"}
      loop_control:
        loop_var: file
      register: output
      changed_when: output.size < 0
      ansible.builtin.template:
        src: "{{ file.src }}"
        dest: "{{ file.dest }}"
        lstrip_blocks: yes
        group: "{{ install_install_haproxy__group }}"
        owner: "{{ install_install_haproxy__user }}"
        mode: "0700"

    - name: "Create fullchain file"
      when: install_haproxy__listen_stats_https | default(false)
      register: output
      changed_when: output.rc != 0
      ansible.builtin.shell: cat {{ install_haproxy__listen_stats_cert }} {{ install_haproxy__listen_stats_key }} > {{ install_haproxy__listen_stats_fullchain }}
